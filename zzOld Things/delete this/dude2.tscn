[gd_scene load_steps=32 format=2]

[ext_resource path="res://Graphics/Welfz/Default/WFZSprites60_99.png" type="Texture" id=1]
[ext_resource path="res://Fonts/tiny.fnt" type="BitmapFont" id=2]
[ext_resource path="res://Graphics/Welfz/HBback.png" type="Texture" id=3]
[ext_resource path="res://Graphics/Welfz/HBover.png" type="Texture" id=4]
[ext_resource path="res://Graphics/Welfz/HBfull2.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends KinematicBody2D

const GRAVITY = 15
const JUMP_HEIGHT = -330
const MAX_SPEED = 150
const ACCELERATION = 150
const ACCELSTART = 25
const KNOCKBACK = 90000000
const KNOCKBACKY = -150
var motion = Vector2()

var kick = false

var playerdirection = Vector2(0,0)
var last_direction = Vector2(0,0)
#var current_speed = Vector2()
var myskin = 0

##Damaged default skins##
#var welfzover
var welfz100 = preload(\"res://Welfz/Default/WFZSprites100.png\")
var welfz60_99 = preload(\"res://Welfz/Default/WFZSprites60_99.png\")
#var welfz40_59
#var welfz20_39
#var welfz1_19


##Skins##
var welfz2600 = preload(\"res://Welfz/Skins/WFZ2600.png\")
#var superpitfall
#var roznerlabs
#var stylish
#var oldschool
#var secretscout
#var nesPORT

# declaration of possible states, can each be accessed by STATES.name of state
enum STATES {IDLE,AIRBORNE,DUCKING,KICKING,AIRKICKING,TAKE_DAMAGE,DEFEATED,BACKFLIP}
# the state variable is exported in its declaration making it visible in the inspector and accessible by animationplayer
export(int) var state = STATES.IDLE
export(float) var max_health = 100

onready var health = max_health setget _set_health
onready var blinkytime = $BlinkyTime
onready var backfliptime = $BackflipTime

signal health_updated(health)
signal playerkilled()
signal playerdirection()
signal myskin(myskin)





func change_state(new_state):
	state = new_state
func changeskin(skinname):
	myskin = skinname
func ready():
	$HUD/Life/LifeBar.value = health


func _physics_process(delta):

	if Input.is_action_pressed(\"ui_right\"):
		playerdirection.x = 1
	if Input.is_action_pressed(\"ui_left\"):
		playerdirection.x = -1

#	if Input.is_action_pressed(\"ui_down\"):
#		 playerdirection.y = 1
#	elif Input.is_action_pressed(\"ui_up\"):
#		playerdirection.y = -1


	match state:
		STATES.IDLE:
			idle()
		STATES.AIRBORNE:
			airborne()
		STATES.DUCKING:
			duck()
		STATES.KICKING:
			kick()
		STATES.AIRKICKING:
			airkick()
		STATES.DEFEATED:
			dead()
		STATES.BACKFLIP:
			backflip()

	motion.y += GRAVITY
	motion.x = lerp(motion.x,0,0.20)
	motion.x = clamp(motion.x,-MAX_SPEED,MAX_SPEED)
	#motion += current_speed
	motion = move_and_slide(motion, Vector2(0,-1))


#func blinky
	if !blinkytime.is_stopped():
		$AniEffectPlayer.play(\"blinky\")
	else:
		$AniEffectPlayer.play(\"noblinky\")



#func playergraphics_default():
	if myskin == 0:
		if health < 100:
			$Sprite.texture = load(\"res://Welfz/Default/WFZSprites60_99.png\")
		elif health == 100:
			$Sprite.texture = load(\"res://Welfz/Default/WFZSprites100.png\")


	if myskin == 0:
		pass
	elif myskin == 2600:
		$Sprite.texture = welfz2600

	last_direction = playerdirection





####### F L O O R   S T U F F #######
func idle():
	$LandArea/LandCol.disabled = true
	if Input.is_action_pressed(\"ui_moveright\"):
		set_flipped(false)
		if motion.x > 0:
			$AnimationPlayer.play(\"turnground\")
		if motion.x < 149:
			$AnimationPlayer.play(\"step\")
			motion.x += ACCELSTART
		else:
			$AnimationPlayer.play(\"run\")
			motion.x += ACCELERATION

	elif Input.is_action_pressed(\"ui_moveleft\"):
		set_flipped(true)
		if motion.x < 0:
			$AnimationPlayer.play(\"turnground\")
		if motion.x > ACCELERATION:
			$AnimationPlayer.play(\"step\")
			motion.x -= ACCELSTART
		else:
			$AnimationPlayer.play(\"run\")
			motion.x -= ACCELERATION

	else:
		$AnimationPlayer.play(\"idle\")

	if playerdirection == last_direction*-1:
			$AnimationPlayer.play(\"turnground\")


	if Input.is_action_just_pressed('ui_jump'):
		motion.y = JUMP_HEIGHT


	if !is_on_floor():
		change_state(STATES.AIRBORNE)
		if Input.is_action_just_pressed(\"ui_kick\"):
			change_state(STATES.AIRKICKING)
	elif Input.is_action_just_pressed(\"ui_movedown\"):
		change_state(STATES.DUCKING)
	elif Input.is_action_just_pressed(\"ui_kick\"):
		change_state(STATES.KICKING)







####### A I R   S T U F F #######
func airborne():
	$JumpCol.disabled = true
	$DefaultCol.disabled = false
	$DuckCol.disabled = true
	$KickArea/KickCol.disabled = true
	$AnimationPlayer.play(\"airborne\")

	if Input.is_action_pressed(\"ui_moveright\"):
		motion.x += ACCELERATION
		set_flipped(false)
	elif Input.is_action_pressed(\"ui_moveleft\"):
		motion.x -= ACCELERATION
		set_flipped(true)

	if is_on_floor():
		change_state(STATES.IDLE)

	if motion.y < 0:
		$AnimationPlayer.play(\"jump\")
		$JumpCol.disabled = false
		$DefaultCol.disabled = true
		$LandArea/LandCol.disabled = true

####### T O   B A C K F L I P #######
		if playerdirection == last_direction*-1:
			change_state(STATES.BACKFLIP)
####################################


####### T O   A I R K I C K #######
		if Input.is_action_pressed(\"ui_kick\"):
			if !is_on_floor():
				change_state(STATES.AIRKICKING)
	if motion.y > 0:
		$LandArea/LandCol.disabled = false
		if Input.is_action_pressed(\"ui_kick\"):
			if !is_on_floor():
				change_state(STATES.AIRKICKING)
####################################




####### B A C K F L I P #######
func backflip():
	$JumpCol.disabled = false
	$DefaultCol.disabled = true
	$LandArea/LandCol.disabled = false
	if myskin == 0:
		$AnimationPlayer.play(\"backflip\")

	if Input.is_action_pressed(\"ui_moveright\"):
		motion.x += ACCELERATION
	elif Input.is_action_pressed(\"ui_moveleft\"):
		motion.x -= ACCELERATION

	if is_on_floor():
		change_state(STATES.IDLE)

#	if motion.y > 0:
#		change_state(STATES.AIRBORNE)

####### T O   A I R K I C K #######
	if Input.is_action_pressed(\"ui_kick\") && !is_on_floor():
		change_state(STATES.AIRKICKING)
		$LandArea/LandCol.disabled = false
####################################






####### D U C K #######
func duck():
	$AnimationPlayer.play(\"duck\")
	$DefaultCol.disabled = true
	$DuckCol.disabled = false
	$KickArea/KickCol.disabled = true
	$JumpCol.disabled = true
	$LandArea/LandCol.disabled = true
	if !Input.is_action_pressed(\"ui_movedown\"):
		$DefaultCol.disabled = false
		$DuckCol.disabled = true
		change_state(STATES.IDLE)
	if Input.is_action_just_pressed(\"ui_kick\"):
		change_state(STATES.KICKING)



####### K I C K S #######
func kick():
	change_state(STATES.KICKING)
	$AnimationPlayer.play(\"kick\")
	$DefaultCol.disabled = false
	$DuckCol.disabled = true
	$KickArea/KickCol.disabled = false
	$JumpCol.disabled = true
	$LandArea/LandCol.disabled = true
	if !is_on_floor():
		change_state(STATES.AIRKICKING)
#	if !Input.is_action_pressed(\"ui_kick\"):



func airkick():
	if !is_on_floor():
		change_state(STATES.AIRKICKING)
		$AnimationPlayer.play(\"airkick\")
		$DefaultCol.disabled = false
		$DuckCol.disabled = true
		$KickArea/KickCol.disabled = false
		$JumpCol.disabled = true
		$LandArea/LandCol.disabled = false
		if Input.is_action_pressed(\"ui_moveright\"):
			motion.x += ACCELERATION
			set_flipped(false)
		elif Input.is_action_pressed(\"ui_moveleft\"):
			motion.x -= ACCELERATION
			set_flipped(true)
			
	elif is_on_floor():
		change_state(STATES.IDLE)





####### B L A H ,   B L A H ,   B L A H #######

func _on_KickArea_body_entered(body):
	if body.is_in_group(\"box\") or body.is_in_group(\"enemy\"):
		body.take_damage(10, playerdirection, self)

func _on_LandArea_body_entered(body):
	if body.is_in_group(\"bouncy\"):
		body.stomped()
		motion.y = JUMP_HEIGHT

func _set_health(value):
	var prev_health = health
	health = clamp(value, 0, max_health)
	if health != prev_health :
		emit_signal(\"health_updated\", health)
		if health == 0:
				change_state(STATES.DEFEATED)
				emit_signal(\"playerkilled\")
	$HUD/Life/LifeBar.value = health
	$HUD/Life/Number.text = str(health)

func take_damage(damage, direction):
	if health != 0:
		if blinkytime.is_stopped():
			change_state(STATES.TAKE_DAMAGE)
			motion.y = KNOCKBACKY
			motion.x = (direction * KNOCKBACK)
			$AnimationPlayer.play(\"ouch1\")
			blinkytime.start()
			_set_health(health - damage)
			emit_signal(\"playerdirection\")

func dead():
	$AnimationPlayer.play(\"dead\")
	$DefaultCol.disabled = true
	$DuckCol.disabled = true
	$KickArea/KickCol.disabled = true
	$JumpCol.disabled = false
	$DamageArea/DamageCol.disabled = true
	$LandArea/LandCol.disabled = true
	pass

# compact reusable function to flip sprite and hitboxes, can be extended if more hitboxes added
func set_flipped(flipstate):
	if flipstate:
		$Sprite.flip_h = true
		$KickArea/KickCol.position.x = -17
#		playerdirection = -1
	else:
		$Sprite.flip_h = false
		$KickArea/KickCol.position.x = 5
#		playerdirection = 1


#Woo!!"

[sub_resource type="Animation" id=2]
resource_name = "Falling"
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 23, 24 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../AnimationPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.4 ]
}

[sub_resource type="Animation" id=3]
resource_name = "FallingBF"
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 77, 78 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../AnimationPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.4 ]
}

[sub_resource type="Animation" id=4]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 21, 22, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24, 23, 24 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../DefaultCol:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0, 2.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../JumpCol:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0, 2.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../DuckCol:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0, 2.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../AnimationPlayer:playback_speed")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.4 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../KickArea/KickCol:disabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = false
tracks/5/keys = {
"times": PoolRealArray( 0, 2.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, true ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("..:state")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 2 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../LandArea/LandCol:disabled")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = false
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=5]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 60, 61, 62 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../AnimationPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2.3 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("..:state")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.8 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}

[sub_resource type="Animation" id=6]
length = 50.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.4, 0.8, 1.2, 1.6, 2, 2.4, 2.8, 3.2 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 70, 71, 72, 73, 74, 75, 76, 23, 24 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../AnimationPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 5.0 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("..:state")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray(  ),
"transitions": PoolRealArray(  ),
"update": 1,
"values": [  ]
}

[sub_resource type="Animation" id=7]
length = 20.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 55, 56 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../Camera2D:pause_mode")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}

[sub_resource type="Animation" id=8]
length = 100.0
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 40, 41, 42 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../DefaultCol:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../JumpCol:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../DuckCol:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../AnimationPlayer:playback_speed")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../LandArea/LandCol:disabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = false
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=9]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 0, 1 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../DefaultCol:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../DuckCol:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../KickArea/KickCol:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../JumpCol:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = false
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../AnimationPlayer:playback_speed")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.6 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../LandArea/LandCol:disabled")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = false
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=10]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("../DefaultCol:disabled")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = false
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../DuckCol:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../KickArea/KickCol:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath(".:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 20 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../JumpCol:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = false
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../LandArea/LandCol:disabled")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = false
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=11]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2, 0.4, 0.6 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 32, 33, 34, 35 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../DefaultCol:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../DuckCol:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../KickArea/KickCol:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0, 0.2, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ true, false, true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../JumpCol:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = false
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../AnimationPlayer:playback_speed")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 2.3 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("..:state")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0.8 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/7/type = "value"
tracks/7/path = NodePath("../LandArea/LandCol:disabled")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/imported = false
tracks/7/enabled = false
tracks/7/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=12]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 1, 1.4 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 54, 53, 30, 31 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("..:state")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=13]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 51 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("..:state")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=14]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 52 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("..:state")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=15]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 53 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("..:state")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0.4 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 1 ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../AnimationPlayer:playback_speed")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}

[sub_resource type="Animation" id=16]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 10, 11, 12, 13, 14, 15 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("../DefaultCol:disabled")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = false
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("../DuckCol:disabled")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = false
tracks/2/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("../KickArea/KickCol:disabled")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = false
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("../JumpCol:disabled")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = false
tracks/4/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../AnimationPlayer:playback_speed")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 1.0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../Camera2D:rotating")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}

[sub_resource type="Animation" id=17]
resource_name = "step"
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 17 ]
}

[sub_resource type="Animation" id=18]
resource_name = "turnground"
tracks/0/type = "value"
tracks/0/path = NodePath(".:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 19 ]
}

[sub_resource type="Animation" id=19]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("AniEffectPlayer:playback_speed")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 64.0 ]
}

[sub_resource type="Animation" id=20]
length = 0.1
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:visible")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="RectangleShape2D" id=21]
extents = Vector2( 5, 11 )

[sub_resource type="RectangleShape2D" id=22]
extents = Vector2( 10, 5 )

[sub_resource type="CapsuleShape2D" id=23]
radius = 4.90793
height = 12.2397

[sub_resource type="CapsuleShape2D" id=24]
radius = 8.44633
height = 8.05078

[sub_resource type="CapsuleShape2D" id=25]
radius = 11.8663
height = 3.26694

[sub_resource type="CapsuleShape2D" id=26]
radius = 6.87703
height = 14.419

[node name="dude2" type="KinematicBody2D" groups=[
"player",
]]
position = Vector2( 77.6189, 87.7937 )
collision_layer = 4
script = SubResource( 1 )
state = 1

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
root_node = NodePath("../Sprite")
playback_speed = 5.0
anims/Falling = SubResource( 2 )
anims/FallingBF = SubResource( 3 )
anims/airborne = SubResource( 4 )
anims/airkick = SubResource( 5 )
anims/backflip = SubResource( 6 )
anims/dead = SubResource( 7 )
anims/duck = SubResource( 8 )
anims/idle = SubResource( 9 )
anims/jump = SubResource( 10 )
anims/kick = SubResource( 11 )
anims/ouch1 = SubResource( 12 )
anims/ouch2 = SubResource( 13 )
anims/ouch3 = SubResource( 14 )
anims/ouch4 = SubResource( 15 )
anims/run = SubResource( 16 )
anims/step = SubResource( 17 )
anims/turnground = SubResource( 18 )

[node name="AniEffectPlayer" type="AnimationPlayer" parent="."]
playback_speed = 64.0
anims/blinky = SubResource( 19 )
anims/noblinky = SubResource( 20 )

[node name="Sprite" type="Sprite" parent="."]
light_mask = 9223
texture = ExtResource( 1 )
vframes = 8
hframes = 10
frame = 24

[node name="DefaultCol" type="CollisionShape2D" parent="."]
position = Vector2( 0, 9 )
shape = SubResource( 21 )
one_way_collision_margin = 0.0

[node name="DuckCol" type="CollisionShape2D" parent="."]
position = Vector2( -1, 15 )
shape = SubResource( 22 )
disabled = true

[node name="JumpCol" type="CollisionShape2D" parent="."]
position = Vector2( -0.00761414, 8.98463 )
shape = SubResource( 23 )
disabled = true

[node name="Camera2D" type="Camera2D" parent="."]
rotating = true
current = true
smoothing_enabled = true
smoothing_speed = 10.0
offset_h = -1.0
drag_margin_left = 0.01
drag_margin_top = 0.1
drag_margin_right = 0.01
drag_margin_bottom = 0.1

[node name="DamageArea" type="Area2D" parent="."]
editor/display_folded = true

[node name="DamageCol" type="CollisionShape2D" parent="DamageArea"]
position = Vector2( 0.0932465, 8.99343 )
shape = SubResource( 24 )

[node name="KickArea" type="Area2D" parent="."]
editor/display_folded = true
position = Vector2( 5.98226, 0.366257 )
__meta__ = {
"_edit_group_": true
}

[node name="KickCol" type="CollisionShape2D" parent="KickArea"]
position = Vector2( 9, 2 )
rotation = 1.5708
shape = SubResource( 25 )
disabled = true

[node name="LandArea" type="Area2D" parent="."]
__meta__ = {
"_edit_group_": true
}

[node name="LandCol" type="CollisionShape2D" parent="LandArea"]
position = Vector2( 0.144104, 18.7795 )
rotation = 1.5708
shape = SubResource( 26 )
disabled = true

[node name="BackflipTime" type="Timer" parent="."]

[node name="BlinkyTime" type="Timer" parent="."]
one_shot = true

[node name="HUD" type="CanvasLayer" parent="."]
editor/display_folded = true

[node name="Life" type="Control" parent="HUD"]
editor/display_folded = true
margin_left = 8.0
margin_top = 15.0
margin_right = 14.0
margin_bottom = 77.0

[node name="Number" type="Label" parent="HUD/Life"]
margin_left = -2.87106
margin_top = 63.4068
margin_right = 9.12894
margin_bottom = 95.4068
custom_fonts/font = ExtResource( 2 )
custom_colors/font_color = Color( 0.992157, 0, 0.501961, 1 )
custom_colors/font_outline_modulate = Color( 1, 1, 1, 1 )
custom_colors/font_color_shadow = Color( 0, 0, 0, 1 )
custom_constants/shadow_offset_x = 1
text = "100"
align = 1
valign = 2
uppercase = true

[node name="LifeBar" type="TextureProgress" parent="HUD/Life"]
margin_left = -1.0
margin_right = 7.0
margin_bottom = 63.0
value = 100.0
texture_under = ExtResource( 3 )
texture_over = ExtResource( 4 )
texture_progress = ExtResource( 5 )
fill_mode = 3
[connection signal="texture_changed" from="Sprite" to="." method="_on_Sprite_texture_changed"]
[connection signal="body_entered" from="DamageArea" to="." method="_on_DamageArea_body_entered"]
[connection signal="area_entered" from="KickArea" to="." method="_on_KickArea_area_entered"]
[connection signal="body_entered" from="KickArea" to="." method="_on_KickArea_body_entered"]
[connection signal="body_entered" from="LandArea" to="." method="_on_LandArea_body_entered"]
[connection signal="value_changed" from="HUD/Life/LifeBar" to="." method="_on_LifeBar_value_changed"]
